#!/bin/bash
#
# vserver-reference	Updates VServer reference
#
# Load before pl_conf, pl_nm, vcached, and vservers
# chkconfig: 3 60 80
# description: Builds VServer reference image
#
# Mark Huang <mlhuang@cs.princeton.edu>
# Copyright (C) 2004 The Trustees of Princeton University
#
# $Id$
#

case "$1" in
    start|restart|reload)
	;;
    stop|status)
	exit 0
	;;
    *)
	echo $"Usage: $0 {start|stop|restart|status}"
	exit 1
	;;
esac

# Source function library.
. /etc/init.d/functions

# VServer definitions
. /usr/lib/util-vserver/util-vserver-vars

# Parse PLC configuration
if [ -r /etc/planetlab/plc_config ] ; then
    . /etc/planetlab/plc_config
else
    PLC_NAME="PlanetLab"
    PLC_SLICE_PREFIX="pl"
    PLC_BOOT_HOST="boot.planet-lab.org"
fi

# Save stdout and stderr
exec 3>&1
exec 4>&2

# Redirect stdout and stderr to a log file
exec 2>&1
exec &>/var/log/vserver-reference.log

echo -n $"Updating VServer reference: " >&3 2>&4

shopt -s nullglob

VROOTS="$__DEFAULT_VSERVERDIR/vserver-reference $__DEFAULT_VSERVERDIR/.vcache/* $__DEFAULT_VSERVERDIR/${PLC_SLICE_PREFIX}_*"

# Make sure the barrier bit is set
chmod 0000 /vservers
setattr --barrier /vservers

# Copy configuration files from host to slices
for file in /etc/hosts /etc/resolv.conf /etc/yum.conf /etc/planetlab/node_id \
            /etc/planetlab/plc_config* /etc/planetlab/php/* \
            /etc/pki/rpm-gpg/* ; do
    if [ -r $file ] ; then
	for vroot in $VROOTS ; do
	    install -D -m 644 $file $vroot/$file
	done
    fi
done

# Remove stale RPM locks
rm -f $vroot/var/lib/rpm/__db*

# (Re)install GPG signing keys
if [ -d /etc/pki/rpm-gpg ] ; then
    for vroot in $VROOTS ; do
	chroot $vroot rpm --allmatches -e gpg-pubkey || :
	chroot $vroot rpm --import /etc/pki/rpm-gpg/* || :
    done
fi

# Old versions of the Boot Manager copied portions of the Boot CD to
# /mnt/cdrom/bootme, to support old scripts which assumed that the
# Boot CD was mounted even in production mode. Now, it just copies it
# to /usr/boot/cacert.pem. In any case, copy the boot server
# certificate to the place(s) where BootServerRequest expects to find
# it (/usr/boot/cacert.pem by default, /mnt/cdrom/bootme in old
# versions).
CACERT="/usr/boot/cacert.pem /mnt/cdrom/bootme/cacert/$PLC_BOOT_HOST/cacert.pem"
for cacert in $CACERT ; do
    if [ -r $cacert ] ; then
	for vroot in $VROOTS ; do
	    # Install boot server certificate
	    install -D -m 644 $cacert $vroot/usr/boot/cacert.pem
	    echo $PLC_BOOT_HOST > $vroot/usr/boot/boot_server

	    # Also install in /mnt/cdrom/bootme for backward compatibility
	    install -D -m 644 $cacert $vroot/mnt/cdrom/bootme/cacert/$PLC_BOOT_HOST/cacert.pem
	    echo $PLC_BOOT_HOST > $vroot/mnt/cdrom/bootme/BOOTSERVER
	done
	break
    fi
done

success >&3 2>&4
echo >&3 2>&4
exit 0
